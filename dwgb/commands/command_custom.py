from classes import bot_storage
import re

class cmd_custom(object):

    storageraw = {
        # первичка
        "лен": ["", 1500],
        "железная руда": ["", 2000],
        "бревно": ["", 500],
        "камень": ["", 400],
        # вторичка
        "каменный блок": ["", 3000],
        "доска": ["", 2200],
        "железный слиток": ["", 8000],
        "ткань": ["", 8000],
        # ресурсы
        "первозданная вода": ["воды", 20],
        "чистая первозданная вода": ["чистой", 250],
        "пещерный корень": ["корень", 90],
        "рыбий жир": ["жир", 90],
        "необычный цветок": ["", 100],
        "камнецвет": ["", 700],
        "болотник": ["", 250],
        "сквернолист": ["", 250],
        "адский корень": ["акорень", 400],
        "адский гриб": ["агриб", 300],
        "кровавый гриб": ["", 13000],
        "чернильник": ["", 7500],
        "корень знаний": ["", 2500],
        "сверкающая чешуя": ["", 450],
        "рыбий глаз": ["", 450],
        "ракушка": ["", 1500],
        # активные книги
        "грязный удар": ["", 4500],
        "слабое исцеление": ["", 1200],
        "удар вампира": ["", 7000],
        "мощный удар": ["", 7000],
        "сила теней": ["", 3000],
        "расправа": ["", 5000],
        "слепота": ["", 7000],
        "рассечение": ["", 8000],
        "берсеркер": ["", 1700],
        "таран": ["", 4500],
        "проклятие тьмы": ["", 2000],
        "огонек надежды": ["", 4000],
        "целебный огонь": ["", 5000],
        "кровотечение": ["", 5000],
        "заражение": ["", 3500],
        "раскол": ["", 7000],
        #пассивные книги
        "быстрое восстановление": ["", 500],
        "мародер": ["", 7500],
        "внимательность": ["", 3500],
        "инициативность": ["", 8000],
        "исследователь": ["", 900],
        "ведьмак": ["", 3000],
        "собиратель": ["", 4000],
        "запасливость": ["", 3500],
        "охотник за головами": ["", 4000],
        "подвижность": ["", 6000],
        "упорность": ["", 600],
        "регенерация": ["", 7500],
        "расчетливость": ["", 2000],
        "презрение к боли": ["", 10000],
        "ошеломление": ["", 6000],
        "неуязвимый": ["", 3000],
        "колющий удар": ["", 3000],
        "бесстрашие": ["", 750],
        "режущий удар": ["", 2000],
        "феникс": ["", 4000],
        "непоколебимый": ["", 6000],
        "суеверность": ["", 2500],
        "гладиатор": ["", 9000],
        "воздаяние": ["", 7500],
        "ученик": ["", 10000],
        "прочность": ["", 2500],
        "расторопность": ["", 1000],
        "устрашение": ["", 800],
        "контратака": ["", 6000],
        "дробящий удар": ["", 1300],
        "защитная стойка": ["", 1000],
        "стойка сосредоточения": ["", 3000],
        "водохлеб": ["", 3000]}
    
    DW_ID = -183040898

    def getAccountTag(self, id, name):
        if id > 0:
            tmpPrefix = '@id'
        else:
            tmpPrefix = '@club'
        return tmpPrefix + str(id) + ' (' + name + ')'

    def getMatch(self, pattern, text):
        return re.match(pattern, text, re.IGNORECASE | re.UNICODE | re.DOTALL)

    def findItem(self, name):
        for tmpStore in self.store:
            if (tmpStore.id == name) or (tmpStore.short == name):
                return tmpStore
        return None

    def getCostIn(self, cost):
        return int(cost * 0.75)

    def getCostOut(self, cost):
        return int(cost * 0.80)

    def __init__(self, database, transport):
        self.database = database
        self.transport = transport
        self.store = set()
        for tmpRaw in self.storageraw:
            tmpStorageRaw = self.storageraw[tmpRaw]
            tmpStorage = bot_storage()
            tmpStorage.id = tmpRaw
            tmpStorage.short = tmpStorageRaw[0]
            tmpStorage.cost = tmpStorageRaw[1]
            self.store.add(tmpStorage)

    def validate(self, message):
        return

    def work(self, message, data):
        return